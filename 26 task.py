#!/usr/bin/python
# -*- coding: utf-8 -*-


'''
Единичная дробь имеет 1 в числителе. Десятичные представления единичных дробей со знаменателями от 2 до 10 даны ниже:

1/2	=	0.5
1/3	=	0.(3)
1/4	=	0.25
1/5	=	0.2
1/6	=	0.1(6)
1/7	=	0.(142857)
1/8	=	0.125
1/9	=	0.(1)
1/10	=	0.1
Где 0.1(6) значит 0.166666..., и имеет повторяющуюся последовательность из одной цифры. 
Заметим, что 1/7 имеет повторяющуюся последовательность из 6 цифр.

Найдите значение d < 1000, для которого 1/d в десятичном виде содержит самую длинную повторяющуюся последовательность цифр.
'''

def f_decimal_rep_seq(n):
	#функция принимает знаменатель и возвращает длину периода от деления 1/n 
	#число не долждно делиться на 2 и на 5, по этому функция рекурсивно сокращает число
	if n % 2 == 0:
		return f_decimal_rep_seq(n//2)
	elif n % 5 == 0:
		return f_decimal_rep_seq(n//5)
	elif n == 1:
		return 0 
	else:
		i = 1 
		while 10**i % n != 1:
			i +=1
		return i



max_id = d = 0

for i in range(1, 1000):
	if f_decimal_rep_seq(i) > max_id:
		max_id, d = f_decimal_rep_seq(i), i

print(d)   #983





	











