#!/usr/bin/python
# -*- coding: utf-8 -*-


"""
___________________________________
Пусть d(n) определяется как сумма делителей n (числа меньше n, делящие n нацело).
Если d(a) = b и d(b) = a, где a ≠ b, то a и b называются дружественной парой, 
а каждое из чисел a и b - дружественным числом.

Например, делителями числа 220 являются 1, 2, 4, 5, 10, 11, 20, 22, 44, 55 и 110, 
поэтому d(220) = 284. Делители 284 - 1, 2, 4, 71, 142, поэтому d(284) = 220.

Подсчитайте сумму всех дружественных чисел меньше 10000.
"""


def f_l_div_triangle(n):
	# функция принимает число-n, возыращает суммц делителей этого числа не включая само число 
	triangle_list = []
	for i in range(1, int((n ** 0.5))+1):
		if n % i == 0:
			triangle_list.append(i)
			triangle_list.append(int(n/i))

	return sum(triangle_list) - n 



div_list = []

for i in range(10000):
	d1 = f_l_div_triangle(i)   # d1 сумма делителей числа i 
	d2 = f_l_div_triangle(d1)  # d2 сумма делителй числа d1 

	if i == d2 and d1 != d2:  # если i и сумма делителей d2 равны то эти числа дружественные 
		div_list.append(i)  # закидываем это число в список

print(sum(div_list))       # 31626













