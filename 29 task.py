#!/usr/bin/python
# -*- coding: utf-8 -*-

"""
_________________________________
Рассмотрим все целочисленные комбинации a^b для 2 ≤ a ≤ 5 и 2 ≤ b ≤ 5:

22=4, 23=8, 24=16, 25=32
32=9, 33=27, 34=81, 35=243
42=16, 43=64, 44=256, 45=1024
52=25, 53=125, 54=625, 55=3125
Если их расположить в порядке возрастания, исключив повторения, мы получим следующую последовательность из 15 различных членов:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

Сколько различных членов имеет последовательность ab для 2 ≤ a ≤ 100 и 2 ≤ b ≤ 100?
"""



def f_apowb_2(nmin, nmax):
	# функция пинимает в nmin-начальное и nmax-конечное число степени a
	# возвращает количество уникальных элементов полученой последовательности a^b 
	# где nmin ≤ a ≤ nmax и nmin ≤ b ≤ nmax
	ab_list = [[j**i for i in range(nmin, nmax+1)] for j in range(nmin, nmax+1)] 
	ab_set = set([elem for line in ab_list for elem in line])
	return len(ab_set)

def f_apowb(nmin, nmax):
	# функция пинимает в nmin-начальное и nmax-конечное число степени a
	# возвращает количество уникальных членов полученой последовательности a^b 
	# где nmin ≤ a ≤ nmax и nmin ≤ b ≤ nmax

	ab_list = []
	for i in range(nmin, nmax+1):
		a = i
		for j in range(nmin, nmax+1):
			ab_list.append(a ** j)

	return len(set(ab_list))



print(f_apowb_2(2, 100))  # 9183
print(f_apowb(2, 100))  # 9183